{"version":3,"file":"otw-checkbox-list.js","sources":["../../dist/components/otw-checkbox-list.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nlet CheckboxList = class CheckboxList extends LitElement {\n    constructor() {\n        super();\n        this.options = [];\n        this.name = '';\n        this.required = false;\n        this.disabled = false;\n        this.errorMessage = '';\n        this.internals = this.attachInternals();\n    }\n    handleChange(event, option) {\n        const checkbox = event.target;\n        option.checked = checkbox.checked;\n        this.requestUpdate();\n        this.updateFormValue();\n        this.dispatchEvent(new CustomEvent('change', {\n            detail: {\n                value: this.getSelectedValues(),\n                options: this.options\n            },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    getSelectedValues() {\n        return this.options\n            .filter(option => option.checked)\n            .map(option => option.value);\n    }\n    updateFormValue() {\n        const selectedValues = this.getSelectedValues();\n        if (this.required && selectedValues.length === 0) {\n            this.internals.setValidity({ valueMissing: true }, this.errorMessage || 'Please select at least one option');\n            this.internals.setFormValue(null);\n        }\n        else {\n            this.internals.setValidity({});\n            this.internals.setFormValue(selectedValues.join(','));\n        }\n    }\n    firstUpdated() {\n        this.updateFormValue();\n    }\n    formDisabledCallback(disabled) {\n        this.disabled = disabled;\n    }\n    formResetCallback() {\n        this.options = this.options.map(option => ({\n            ...option,\n            checked: false\n        }));\n        this.updateFormValue();\n    }\n    formStateRestoreCallback(state) {\n        if (state) {\n            const selectedValues = state.split(',');\n            this.options = this.options.map(option => ({\n                ...option,\n                checked: selectedValues.includes(option.value)\n            }));\n            this.updateFormValue();\n        }\n    }\n    render() {\n        return html `\r\n      <div class=\"checkbox-group\" role=\"group\">\r\n        ${this.options.map(option => html `\r\n          <label class=\"checkbox-container ${this.disabled ? 'disabled' : ''}\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"${this.name}\"\r\n              .checked=${option.checked || false}\r\n              .value=${option.value}\r\n              ?disabled=${this.disabled}\r\n              @change=${(e) => this.handleChange(e, option)}\r\n            >\r\n            <span class=\"checkmark\"></span>\r\n            <span class=\"checkbox-label\">${option.label}</span>\r\n          </label>\r\n        `)}\r\n      </div>\r\n      ${this.errorMessage ? html `\r\n        <div class=\"error-message\">${this.errorMessage}</div>\r\n      ` : null}\r\n    `;\n    }\n};\nCheckboxList.formAssociated = true;\nCheckboxList.styles = css `\r\n    :host {\r\n      display: block;\r\n      font-family: system-ui, -apple-system, sans-serif;\r\n    }\r\n\r\n    .checkbox-group {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 12px;\r\n    }\r\n\r\n    .checkbox-container {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n      position: relative;\r\n      padding-left: 28px;\r\n      cursor: pointer;\r\n      user-select: none;\r\n    }\r\n\r\n    /* Hide default checkbox */\r\n    .checkbox-container input {\r\n      position: absolute;\r\n      opacity: 0;\r\n      cursor: pointer;\r\n      height: 0;\r\n      width: 0;\r\n    }\r\n\r\n    /* Custom checkbox */\r\n    .checkmark {\r\n      position: absolute;\r\n      left: 0;\r\n      height: 20px;\r\n      width: 20px;\r\n      background-color: #fff;\r\n      border: 2px solid #ccc;\r\n      border-radius: 4px;\r\n      transition: all 0.2s ease-in-out;\r\n    }\r\n\r\n    /* Hover state */\r\n    .checkbox-container:hover .checkmark {\r\n      border-color: #007bff;\r\n    }\r\n\r\n    /* Checked state */\r\n    .checkbox-container input:checked ~ .checkmark {\r\n      background-color: #007bff;\r\n      border-color: #007bff;\r\n    }\r\n\r\n    /* Focus state */\r\n    .checkbox-container input:focus-visible ~ .checkmark {\r\n      outline: 1px solid #007bff;\r\n      outline-offset: 2px;\r\n    }\r\n\r\n    /* Checkmark icon */\r\n    .checkmark:after {\r\n      content: \"\";\r\n      position: absolute;\r\n      display: none;\r\n      left: 6px;\r\n      top: 2px;\r\n      width: 5px;\r\n      height: 10px;\r\n      border: solid white;\r\n      border-width: 0 2px 2px 0;\r\n      transform: rotate(45deg);\r\n    }\r\n\r\n    /* Show checkmark when checked */\r\n    .checkbox-container input:checked ~ .checkmark:after {\r\n      display: block;\r\n    }\r\n\r\n    /* Disabled state */\r\n    .checkbox-container.disabled {\r\n      opacity: 0.6;\r\n      cursor: not-allowed;\r\n    }\r\n\r\n    /* Error state */\r\n    .error-message {\r\n      color: #dc3545;\r\n      font-size: 0.875rem;\r\n      margin-top: 4px;\r\n    }\r\n\r\n    .checkbox-label {\r\n      line-height: 20px;\r\n      color: #333;\r\n    }\r\n  `;\n__decorate([\n    property({ type: Array })\n], CheckboxList.prototype, \"options\", void 0);\n__decorate([\n    property({ type: String })\n], CheckboxList.prototype, \"name\", void 0);\n__decorate([\n    property({ type: Boolean })\n], CheckboxList.prototype, \"required\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], CheckboxList.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: String })\n], CheckboxList.prototype, \"errorMessage\", void 0);\nCheckboxList = __decorate([\n    customElement('otw-checkbox-list')\n], CheckboxList);\nexport { CheckboxList };\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","CheckboxList","LitElement","constructor","super","this","options","name","required","disabled","errorMessage","internals","attachInternals","handleChange","event","option","checkbox","checked","requestUpdate","updateFormValue","dispatchEvent","CustomEvent","detail","value","getSelectedValues","bubbles","composed","filter","map","selectedValues","setValidity","valueMissing","setFormValue","join","firstUpdated","formDisabledCallback","formResetCallback","formStateRestoreCallback","state","split","includes","render","html","e","label","formAssociated","styles","css","property","type","Array","prototype","String","Boolean","reflect","customElement"],"mappings":"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"}